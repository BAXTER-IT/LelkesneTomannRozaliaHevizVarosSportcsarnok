@use '../../../styles.scss' as global;

:host {
  display: block;
  max-width: 600px; // Limit form width for better readability
  margin: 0 auto; // Center the form
  padding: calc(var(--spacing-unit) * 3);
  background-color: var(--surface-color);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
}

h2 {
  text-align: center;
  margin-bottom: calc(var(--spacing-unit) * 2.5);
  color: var(--text-color);
  font-size: 1.5rem;
}

form {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 2);

  div {
    display: flex;
    flex-direction: column; // Stack label and input vertically
    gap: calc(var(--spacing-unit) * 0.75);
  }

  label {
    font-weight: 500;
    color: var(--muted-text-color);
    font-size: 0.9rem;
  }

  input[type="text"],
  input[type="number"],
  select {
    padding: calc(var(--spacing-unit) * 1.25);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    font-size: 1rem;
    width: 100%;
    background-color: var(--background-color); // Light background for inputs
    color: var(--text-color);

    &:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px lighten(global.$primary-color-value, 30%);
    }
  }

  select {
    appearance: none; // Basic reset for select
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%23333' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right calc(var(--spacing-unit) * 1.5) center;
    background-size: 1em;
    padding-right: calc(var(--spacing-unit) * 4); // Make space for arrow
  }

  button[type="submit"] {
    margin-top: var(--spacing-unit); // Add some space before the button
    padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 2.5);
    font-size: 1.1rem;
    font-weight: 500;

    // Specific styling for BUY/SELL buttons could be added if type is dynamic
    // For now, using primary color
  }
}

.error,
.success {
  text-align: center;
  padding: var(--spacing-unit);
  margin-top: var(--spacing-unit);
  border-radius: var(--border-radius);
  font-size: 0.9rem;
}

.error {
  color: var(--danger-color);
  background-color: lighten(global.$danger-color-value, 35%);
  border: 1px solid var(--danger-color);
}

.success {
  color: var(--success-color);
  background-color: lighten(global.$success-color-value, 40%);
  border: 1px solid var(--success-color);
}

// Responsive adjustments
@media (max-width: 768px) {
  :host {
    padding: calc(var(--spacing-unit) * 2);
  }

  h2 {
    font-size: 1.3rem;
  }
}
